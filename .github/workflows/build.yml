name: Build and Release Nim Script

on:
  push:
    tags:
      - 'v*' # Trigger on version tags (e.g., v1.0.0)

jobs:
  build:
    name: Build for ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]
        include:
          - os: ubuntu-latest
            platform: linux
            nim_arch: amd64
            display_arch: x86_64
            ext: ""
          - os: ubuntu-latest
            arch: arm64
            platform: linux
            nim_arch: arm64
            display_arch: aarch64
            ext: ""
            cross_compile: true
          - os: macos-latest
            platform: macosx
            nim_arch: amd64
            display_arch: x86_64
            ext: ""
          - os: macos-latest
            arch: arm64
            platform: macosx
            nim_arch: arm64
            display_arch: arm64
            ext: ""
          - os: windows-latest
            platform: windows
            nim_arch: amd64
            display_arch: x86_64
            ext: ".exe"
          - os: windows-latest
            arch: arm64
            platform: windows
            nim_arch: arm64
            display_arch: aarch64
            ext: ".exe"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Nim
        uses: jiro4989/setup-nim-action@v2
        with:
          nim-version: '2.2.2'

      - name: Install dependencies (Linux - amd64)
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'amd64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc

      - name: Install cross-compiler (Linux - arm64)
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install gcc

      - name: Build the project (native)
        if: matrix.arch != 'arm64' || matrix.os != 'ubuntu-latest'
        run: |
          nim c -d:ssl -d:release --cpu:${{ matrix.nim_arch }} --os:${{ matrix.platform }} --out:bin/urlchecker-${{ matrix.platform }}-${{ matrix.display_arch }}${{ matrix.ext }} urlchecker.nim

      - name: Build the project (Linux ARM64 cross-compile)
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'arm64'
        run: |
          nim c -d:ssl -d:release --cpu:${{ matrix.nim_arch }} --os:${{ matrix.platform }} --gcc.exe:aarch64-linux-gnu-gcc --gcc.linkerexe:aarch64-linux-gnu-gcc --out:bin/urlchecker-${{ matrix.platform }}-${{ matrix.display_arch }}${{ matrix.ext }} urlchecker.nim

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: urlchecker-${{ matrix.platform }}-${{ matrix.display_arch }}${{ matrix.ext }}
          path: bin/urlchecker-${{ matrix.platform }}-${{ matrix.display_arch }}${{ matrix.ext }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: true
          prerelease: false
          files: |
            artifacts/urlchecker-linux-x86_64
            artifacts/urlchecker-linux-aarch64
            artifacts/urlchecker-macosx-x86_64
            artifacts/urlchecker-macosx-arm64
            artifacts/urlchecker-windows-x86_64.exe
            artifacts/urlchecker-windows-aarch64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
